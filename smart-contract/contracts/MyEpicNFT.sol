// SPDX-License-Identifier: UNLICENSED

pragma solidity ^0.8.1;

// We first import some OpenZeppelin Contracts.
import "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol";
import "@openzeppelin/contracts/utils/Counters.sol";
import "hardhat/console.sol";
import "@openzeppelin/contracts/utils/Strings.sol";
import "@openzeppelin/contracts/utils/Base64.sol";

// We inherit the contract we imported. This means we'll have access
// to the inherited contract's methods.
contract MyEpicNFT is ERC721URIStorage {
    // Magic given to us by OpenZeppelin to help us keep track of tokenIds.
    using Counters for Counters.Counter;
    Counters.Counter private _tokenIds;

    string private _baseSvg =
        "<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 512.012 512.012'><path d='M154.719 72.403C126.866 43.201 63.24 25.069 56.077 23.097l-16.174-4.451-4.136 16.258C19.989 96.919 23.148 160.8 44.661 214.781L154.719 72.403z' fill='#ffab00'/><path d='M130.907 95.115c-14.004-14.682-45.394-27.695-67.04-35.116-7.499 39.045-6.724 78.225 2.153 113.907l64.887-78.791z' fill='#d37b93'/><path d='M357.3 72.403c27.853-29.202 91.479-47.334 98.642-49.306l16.174-4.451 4.137 16.258c15.777 62.015 12.619 125.897-8.894 179.878L357.3 72.403' fill='#bd7f00'/><path d='M381.112 95.114c14.004-14.682 45.394-27.694 67.04-35.116 7.499 39.045 6.724 78.225-2.153 113.907l-64.887-78.791' fill='#9d5b6e'/><path d='M256.01 493.366c-62.826 0-120.222-18.795-161.612-52.922-44.874-36.999-68.592-88.731-68.592-149.601 0-61.004 24.331-123.408 66.754-171.206 21.304-24.004 45.843-42.99 72.937-56.432 28.944-14.361 59.397-21.642 90.514-21.642s61.57 7.281 90.515 21.642c27.093 13.442 51.632 32.428 72.936 56.432 42.422 47.799 66.753 110.202 66.753 171.206 0 60.87-23.719 112.602-68.592 149.601-41.393 34.126-98.787 52.922-161.613 52.922' fill='#ffab00'/><path d='M142.608 318.426.024 285.313l7.443-32.05 142.584 33.113zM7.46 422.872.024 390.818l142.598-33.084 7.437 32.054z' fill='#444242'/><path d='M179.662 220.226c0-12.085 9.687-21.871 21.592-21.871 11.92 0 21.606 9.787 21.606 21.871s-9.685 21.879-21.606 21.879c-11.904 0-21.592-9.796-21.592-21.879z' fill='#333'/><path d='M239.559 492.923c5.437.288 10.921.443 16.451.443s11.016-.154 16.455-.443v-110.74h-32.906v110.74' fill='#444242'/><path d='M256.012 386.843c-16.999 0-32.195-13.353-37.939-19.095-5.767-5.763-19.18-21.031-19.18-38.286 0-14.116 7.031-24.846 19.796-30.217 8.509-3.58 19.322-5.04 37.323-5.04s28.812 1.46 37.323 5.04c12.765 5.371 19.796 16.102 19.796 30.217 0 17.255-13.414 32.523-19.18 38.286-5.744 5.742-20.94 19.095-37.939 19.095' fill='#d37b93'/><path d='M256.024 493.366h-.012m154.847-47.59-.023.018a.18.18 0 0 1 .023-.018m.239-.181-.038.03c.011-.01.026-.021.038-.03m.24-.183-.052.039.052-.039m.235-.178-.053.041.053-.041m.234-.178-.052.04.052-.04m.234-.179-.052.039.052-.039m.207-.158-.023.018a.141.141 0 0 1 .023-.018m.672-.519-.079.06.079-.06m.239-.185-.103.08.103-.08m.239-.187-.109.084.109-.084m.238-.185-.111.087.111-.087m.242-.19-.116.091.116-.091m.244-.192-.13.102.13-.102m.239-.189-.132.104.132-.104m.243-.192-.138.11.138-.11m.273-.216-.173.137.173-.137m.297-.237-.237.189.237-.189m.237-.188-.19.151.19-.151m.235-.189-.155.124.155-.124m.24-.193-.151.122.151-.122m.234-.189-.148.12.148-.12m.237-.192-.144.116.144-.116m.232-.188-.14.114.14-.114m.238-.194-.141.115.141-.115m.239-.196-.145.118.145-.118m.25-.205-.162.133.162-.133m.305-.25-.233.192.233-.192M256.012 41.562c31.114 0 61.568 7.281 90.513 21.642-28.944-14.361-59.399-21.642-90.513-21.642m221.422-1.866.016.069a.77.77 0 0 0-.016-.069m-.084-.354.022.093-.022-.093m-.086-.358.029.12a3.523 3.523 0 0 0-.029-.12m-.085-.354.032.132-.032-.132m-.087-.357.034.143-.034-.143m-.087-.355.036.149-.036-.149m-.086-.357.038.157-.038-.157m-.088-.353.04.158-.04-.158m-.089-.362.043.171-.043-.171m-.089-.356.044.175-.044-.175m-.09-.362.046.186-.046-.186m-.09-.358.048.19-.048-.19m-.096-.38.055.218-.055-.218m-20.459-12.286-2.356.666 2.356-.666m16.199-4.458-16.174 4.451 16.174-4.451 4.137 16.258.09.353-4.227-16.611' fill='#bdbdbf'/><path d='M256.012 41.562v252.643c18 0 28.812 1.46 37.323 5.04 12.765 5.371 19.796 16.102 19.796 30.217 0 17.255-13.414 32.523-19.18 38.286-3.786 3.784-11.677 10.875-21.485 15.269v109.905c53.04-2.818 101.395-19.253 138.371-47.13l.023-.018.201-.151.038-.03.189-.144.052-.04.181-.138.053-.041.183-.139.052-.039.182-.139.052-.04.183-.14.023-.018.593-.457.079-.06.136-.105.103-.08.131-.102.109-.084.126-.099.111-.087.126-.099.116-.091c.038-.031.076-.059.114-.089l.131-.102.109-.086.132-.104.104-.082.138-.11.099-.079.173-.137.06-.047.237-.189.047-.037.19-.151a1.74 1.74 0 0 0 .08-.065l.155-.124.089-.071.151-.122.086-.069.148-.12c.031-.024.063-.05.093-.076l.144-.116c.031-.024.063-.05.093-.076l.14-.114.097-.079.141-.115.094-.077.145-.118.088-.071.162-.133.072-.059.233-.192c11.366-9.372 21.368-19.691 29.978-30.861l-85.624-19.881 7.442-32.054 96.688 22.453-.011-.002c13.214-26.426 20.051-56.315 20.111-88.822l.004-.001-116.794 27.121-7.441-32.054 121.92-28.311c-2.472-17.709-6.888-35.295-13.122-52.364a268.736 268.736 0 0 0-21.758-45.658 267.926 267.926 0 0 0-29.555-40.372c-9.949-11.209-20.6-21.323-31.89-30.29-8.964-7.119-18.326-13.516-28.057-19.16a240.418 240.418 0 0 0-12.777-6.877l-.212-.104c-28.945-14.361-59.398-21.642-90.515-21.642' fill='#bd7f00'/><path d='m504.568 253.229-20.672 4.801-121.92 28.311 7.444 32.053 116.793-27.121 25.799-5.991-7.444-32.053M369.42 357.646l-7.444 32.053 85.624 19.883v-.001l56.968 13.229 7.444-32.052-142.592-33.112' fill='#323132'/><path d='M310.607 198.185c-12.019 0-21.769 9.868-21.769 22.043s9.75 22.043 21.769 22.043c12.005 0 21.755-9.868 21.755-22.043s-9.751-22.043-21.755-22.043' fill='#333'/><path d='M272.465 383.018c-5.073 2.273-10.658 3.825-16.453 3.825v106.523l7.624-.104 1.396-.04 7.43-.298h.002V383.018' fill='#323132'/><path d='M256.012 294.204v92.639c5.795 0 11.38-1.552 16.453-3.825 9.808-4.395 17.7-11.485 21.485-15.269 5.766-5.763 19.18-21.031 19.18-38.286 0-14.116-7.031-24.846-19.796-30.217-8.51-3.582-19.323-5.042-37.322-5.042' fill='#9d5b6e'/><text x='85%' y='99%'>NFT #";
    uint256 private _maxMintValue = 50;
    event NewEpicNFTMinted(address sender, uint256 tokenId);

    // We need to pass the name of our NFTs token and its symbol.
    constructor() ERC721("TinoNFT", "TINO") {}

    // A function our user will hit to get their NFT.
    function makeAnEpicNFT() public {
        require(
            _tokenIds.current() < _maxMintValue,
            "This NFT has reached a limit and cannot be mint anymore"
        );
        _tokenIds.increment();
        uint256 newItemId = _tokenIds.current();

        string memory finalSvg = string(
            abi.encodePacked(
                _baseSvg,
                Strings.toString(newItemId),
                "</text></svg>"
            )
        );

        // Get all the JSON metadata in place and base64 encode it.
        string memory json = Base64.encode(
            bytes(
                string(
                    abi.encodePacked(
                        '{"name": "',
                        // We set the title of our NFT as the generated word.
                        string(
                            abi.encodePacked(
                                "Kitten #",
                                Strings.toString(newItemId)
                            )
                        ),
                        '", "description": "A highly acclaimed collection of squares.", "image": "data:image/svg+xml;base64,',
                        // We add data:image/svg+xml;base64 and then append our base64 encode our svg.
                        Base64.encode(bytes(finalSvg)),
                        '"}'
                    )
                )
            )
        );

        string memory finalTokenUri = string(
            abi.encodePacked("data:application/json;base64,", json)
        );
        console.log("\n--------------------");
        console.log(finalTokenUri);
        console.log("--------------------\n");

        // Actually mint the NFT to the sender using msg.sender.
        _safeMint(msg.sender, newItemId);

        // Set the NFTs data.
        _setTokenURI(newItemId, finalTokenUri);
        console.log(
            "An NFT w/ ID %s has been minted to %s",
            newItemId,
            msg.sender
        );
        emit NewEpicNFTMinted(msg.sender, newItemId);
    }

    function getTotalNFTsMintedSoFar() public view returns (uint256) {
        return _tokenIds.current();
    }

    function getMaxNFTsMintValue() public view returns (uint256) {
        return _maxMintValue;
    }
}
